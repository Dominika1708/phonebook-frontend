{"version":3,"file":"static/js/5.280836b7.chunk.js","mappings":"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","sources":["components/ContactForm/contactForm.jsx","components/ContactItem/contactItem.jsx","components/ContactList/contactList.jsx","components/Filter/filter.jsx","components/Loading/loading.jsx","pages/Phonebook/phonebook.jsx","../node_modules/debounce/index.js","webpack://react-homework-template/./src/components/app.module.css?b380"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectItems } from 'redux/contacts/selectors';\nimport styles from '../app.module.css';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectItems);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n\n    if (contacts.find(contact => contact.name === name)) {\n      form.reset();\n      return alert(`${name} is already in contacts`);\n    }\n\n    dispatch(addContact({ name, phone: number }));\n    form.reset();\n  };\n\n  return (\n      <form className={styles.form} onSubmit={handleSubmit}>\n        <label className={styles.label}>\n          Name\n          <input\n            className={styles.input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n        <label className={styles.label}>\n          Number\n          <input\n            className={styles.input}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n\n        <button className={styles.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n  );\n};\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport styles from '../app.module.css';\n\nexport const ContactItem = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <li>\n      {contact.name}: {contact.phone}\n      <button\n        className={styles.delete__button}\n        type=\"button\"\n        onClick={() => dispatch(deleteContact(contact._id))}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.object.isRequired,\n};\n","import { ContactItem } from 'components/ContactItem/contactItem';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleItems } from 'redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectVisibleItems)\n\n  return (\n    <ul>\n      {contacts.map(contact => (\n        <ContactItem key={contact._id} contact={contact} />\n      ))}\n    </ul>\n  );\n};\n","import { debounce } from 'debounce';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport styles from '../app.module.css';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const searchItems = e => {\n    e.preventDefault();\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <label className={styles.label}>\n      Find contacts by name\n      <input\n        className={styles.input}\n        type=\"text\"\n        name=\"filter\"\n        onChange={debounce(searchItems, 500)}\n      ></input>\n    </label>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\nimport styles from '../app.module.css';\n\nexport const Loading = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  return (\n    <div className={styles.loading}>\n      {isLoading && !error && <b>Loading...</b>}\n      {error && !isLoading && <b>Request failed with status code {error}</b>}\n    </div>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nimport { ContactForm } from 'components/ContactForm/contactForm';\nimport { ContactList } from 'components/ContactList/contactList';\nimport { Filter } from 'components/Filter/filter';\nimport { Loading } from 'components/Loading/loading';\nimport { selectIsPending } from 'redux/auth/selectors';\n\nconst Phonebook = () => {\n  const dispatch = useDispatch();\n  const isPending = useSelector(selectIsPending)\n\n  useEffect(() => {\n    if (!isPending) dispatch(fetchContacts());\n    // eslint-disable-next-line\n  }, [dispatch]);\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n\n      <h2>Contacts</h2>\n      <Filter />\n      <Loading />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default Phonebook;\n","/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing. The function also has a property 'clear' \n * that is a function which will clear the timer to prevent previously scheduled executions. \n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\nfunction debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = Date.now() - timestamp;\n\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n    }\n  };\n\n  var debounced = function(){\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n\n  debounced.clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n  \n  debounced.flush = function() {\n    if (timeout) {\n      result = func.apply(context, args);\n      context = args = null;\n      \n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n\n  return debounced;\n};\n\n// Adds compatibility for ES modules\ndebounce.debounce = debounce;\n\nmodule.exports = debounce;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"app_form__+5Nq3\",\"label\":\"app_label__ZFw5Q\",\"input\":\"app_input__2Ikso\",\"button\":\"app_button__y7h5-\",\"delete__button\":\"app_delete__button__EqEXW\",\"loading\":\"app_loading__uJaSa\"};"],"names":["ContactForm","dispatch","useDispatch","contacts","useSelector","selectItems","className","styles","onSubmit","e","preventDefault","form","target","name","elements","value","number","find","contact","reset","alert","addContact","phone","type","pattern","title","required","ContactItem","onClick","deleteContact","_id","ContactList","selectVisibleItems","map","Filter","onChange","debounce","setFilter","Loading","isLoading","selectIsLoading","error","selectError","isPending","selectIsPending","useEffect","fetchContacts","func","wait","immediate","timeout","args","context","timestamp","result","later","last","Date","now","setTimeout","apply","debounced","this","arguments","callNow","clear","clearTimeout","flush","module","exports"],"sourceRoot":""}